#!/bin/bash -e

script_dir=$(dirname "$0")
source "${script_dir}/setup"

function ensure_namespace() {
    kubectl create namespace ${MYSQL_NAMESPACE} 2>/dev/null || return 0
}

function ensure_database_deployment() {
    exit_code=0
    kubectl get deployment/mysql --context&>/dev/null || exit_code=$?
    if [[ $exit_code == 0 ]]; then
        return;
    fi

    kubectl apply -k ${script_dir}/k8s
    kubectl rollout status deployment/mysql
    echo "Created mysql.${MYSQL_NAMESPACE} deployment"
}

function ensure_database() {

    local database="${1}"
    local user="${database}"

    local ensure_database_sql=$(cat \
<<SQL
    CREATE DATABASE IF NOT EXISTS \`${database}\`;
    CREATE USER IF NOT EXISTS \`${user}\`;
    GRANT ALL ON \`${database}\`.* TO \`${user}\`@"%";
SQL
    )

    local mysql_output="/dev/null"
    if [[ ${MYSQL_DEBUG} != false ]]; then
        mysql_output="/dev/stdout"
    fi

    local exit_code=0
    echo "${ensure_database_sql}" | mysql &>${mysql_output} || exit_code=$?
    if [[ $exit_code != 0 ]]; then
        echo "Failed to create database ${database}" >&2
        return $exit_code
    fi

    echo "Ensured database(s) ${MYSQL_DATABASES} exist in mysql.${MYSQL_NAMESPACE}"
}

ensure_namespace
ensure_database_deployment

databases=(${MYSQL_DATABASES//,/ })
for database in "${databases[@]}"; do
    ensure_database "${database}"
done
